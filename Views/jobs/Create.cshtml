@model job_offers.Models.job

@{
    ViewBag.Title = "Create";
    
}

<h2>Create</h2>
<script src="//cdn.tinymce.com/4/tinymce.min.js"></script>
<script>tinymce.init({ selector:'textarea' });</script>
@using (Html.BeginForm("Create","jobs",FormMethod.Post,new { enctype= "multipart/form-data" } ))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="alert alert-danger" id="erordiv" style="display:none">
            <span id="view">

            </span>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.jobtitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.jobtitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.jobtitle, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.jobimg, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="upload" id="image" />
                    @Html.ValidationMessageFor(model => model.jobimg, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.jobdiscrption, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.jobdiscrption, new { htmlAttributes = new { @class = "form-control", @id = "editor" } })
                    @Html.ValidationMessageFor(model => model.jobdiscrption, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.categoryid, "categoryid", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("categoryid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.categoryid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" id="save" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/jquery.js"></script>
<script>
    $(function(){
        $("#save").click(function () {
            if($("#image").val()=="")
            {
                $("#erordiv").fadeIn();
                $("#view").append("select photo please");
                return false;

            }
        })
    })
    

</script>
<script>
    SUNEDITOR.create("editor");
</script>
